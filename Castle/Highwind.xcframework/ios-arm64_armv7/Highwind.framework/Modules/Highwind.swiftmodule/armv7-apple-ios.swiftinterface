// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target armv7-apple-ios9.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Highwind
import CoreLocation
import CoreMotion
import CoreTelephony
import Foundation
import GeoZip
@_exported import Highwind
import Swift
import SystemConfiguration
import UIKit
import _Concurrency
@objc public enum HighwindError : Swift.Int, Swift.Error, Swift.Equatable, Swift.Hashable, Swift.RawRepresentable {
  case invalidPublishableKey
  case invalidUUID
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public static var _nsErrorDomain: Swift.String {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
@objc public class Highwind : ObjectiveC.NSObject {
  @objc public init(version: Swift.String, uuid: Swift.String, publishableKey: Swift.String, userAgent: Swift.String) throws
  @objc public func token() -> Swift.String
  @objc public func encodePayload(publishableKey: Swift.String, encodedUserPayload: Swift.String, encodedEventPayloads: Swift.Array<Swift.String>) -> Swift.String?
  @objc public func encodeScreenEvent(requestToken: Swift.String, payload: Swift.String) -> Swift.String
  @objc public func encodeCustomEvent(requestToken: Swift.String, payload: Swift.String) -> Swift.String
  @objc public func encodeUserPayloadSet(payload: Swift.String) -> Swift.String
  @objc public func encodeUserJwtPayloadSet(payload: Swift.String) -> Swift.String
  @objc deinit
}
